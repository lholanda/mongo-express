version: '3.8'

# criar volume gerenciado pelo docker
volumes:
  desafio_vol:
    name: desafio_vol
    
# cria a rede 
networks:
  desafio_net:
    name: desafio_net
    driver: bridge

# cria os containers
services:
# container do banco de dados    
  mongodatabase:
    image: mongo
    restart: always
    container_name: mongo_desafio
    networks:
      - desafio_net
    #
    volumes:
      - desafio_vol:/data/db
    # nao Ã© necessario para rodar dentro da rede - liberar somente se quiser acesso externo por outra aplicacao
    ports:
     - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

 #--------------------------------------------------------------------------------------------
  
  mongo-express:
    image: lholanda/mongo-express-desafio:v1
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - mongodatabase
    container_name: mongo-express_desafio
    networks:
      - desafio_net
    ports:
      - 8090:8081
    environment:
      # 
      ME_CONFIG_MONGODB_AUTH_USERNAME: admin
      ME_CONFIG_MONGODB_AUTH_PASSWORD: pass

      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      
      #-------------------------------------************** alteracao para o desafio01 
      ME_CONFIG_BASICAUTH: "true" 
      ME_CONFIG_SITE_COOKIESECRET: 'cookiesecret'
      ME_CONFIG_SITE_SESSIONSECRET: 'sessionsecret'

      #1 pode ter acesso com o SERVER
      # ME_CONFIG_MONGODB_SERVER: mongodatabase
      #2 ou com a URL
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodatabase:27017/

      ## senha na console admin/pass
      ## cd /var/lib/docker/volumes/desafio_vol/_data
